<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>executors on LPRAKASHV CODE BYTES</title><link>https://www.lprakashv.com/tags/executors/</link><description>Recent content in executors on LPRAKASHV CODE BYTES</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Lalit Prakash Vatsal</copyright><lastBuildDate>Thu, 16 Apr 2020 10:47:47 +0000</lastBuildDate><atom:link href="https://www.lprakashv.com/tags/executors/index.xml" rel="self" type="application/rss+xml"/><item><title>Going Reactive!</title><link>https://www.lprakashv.com/posts/2020-04-16_going-reactive/</link><pubDate>Thu, 16 Apr 2020 10:47:47 +0000</pubDate><guid>https://www.lprakashv.com/posts/2020-04-16_going-reactive/</guid><description>Logo courtesy: http://reactivex.io/
There is a lot of hype around this shiny new thing in web applications development world called being “Reactive”! There are many frameworks popping up with this slogan, e.g., Vert.x, Akka, Spring Webflux, Play, RxJava, RxJS etc. to name a few. What does it mean? and why is this hype? is it worth your time? Let’s explore…
What does Reactive mean exactly? Being reactive means ability to “react” to “events/changes”.</description></item></channel></rss>