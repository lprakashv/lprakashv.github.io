<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>data ingestion on LPRAKASHV TECH BLOG</title><link>https://www.lprakashv.com/tags/data-ingestion/</link><description>Recent content in data ingestion on LPRAKASHV TECH BLOG</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Lalit Prakash Vatsal</copyright><lastBuildDate>Fri, 28 Aug 2020 21:08:07 +0000</lastBuildDate><atom:link href="https://www.lprakashv.com/tags/data-ingestion/index.xml" rel="self" type="application/rss+xml"/><item><title>Bulk RDBMS Upserts with Spring</title><link>https://www.lprakashv.com/posts/2020-08-28_bulk-rdbms-upserts-with-spring/</link><pubDate>Fri, 28 Aug 2020 21:08:07 +0000</pubDate><guid>https://www.lprakashv.com/posts/2020-08-28_bulk-rdbms-upserts-with-spring/</guid><description>Upsert is a fairly common terminology in databases, meaning Update if the record exists or Insert the new record. Upserts make more sense in case of simple object save requests with new information.
Why Bulk? If we talk about any data sync, data migration or bulk data update jobs, we are bound to have a bulk upsert scenario to update whatever we have in the database and insert all the new rows.</description></item><item><title>Akka Streams in Java Spring Boot!</title><link>https://www.lprakashv.com/posts/2020-04-12_akka-streams-in-java-spring-boot/</link><pubDate>Sun, 12 Apr 2020 10:45:58 +0000</pubDate><guid>https://www.lprakashv.com/posts/2020-04-12_akka-streams-in-java-spring-boot/</guid><description>Streaming data from a Source to Sink is a very trivial task in today’s data processing and data pipelining systems. Ergo, there are many streaming solutions out there like: Kafka Stream, Spark Streaming, Apache Flink etc.
All of them in one way or another either need an infrastructure to be setup to be able to fully take advantage of them (e.g., HDFS, Spark cluster, Kafka streaming setup etc.) or we need some kind of orchestration among the streaming jobs (e.</description></item></channel></rss>